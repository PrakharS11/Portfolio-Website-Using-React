{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\prakh\\\\OneDrive\\\\Desktop\\\\New folder (2)\\\\Portfolio-Website-Using-React\\\\src\\\\Components\\\\quote\\\\Quote.js\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { fetchRandomQuote } from \"./QuoteClient\";\nimport \"./styles/Quote.css\";\n\nfunction Quote() {\n  const [quoteText, setQuoteText] = useState(\"\");\n  const [isDarkMode, setIsDarkMode] = useState(false);\n  useEffect(() => {\n    fetchRandomQuote(setQuoteText);\n  }, []);\n\n  const getDisplayQuote = () => {\n    let darkClass = isDarkMode ? \"quote-display-wrapper-dark\" : \"\";\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"quote-display-wrapper \" + darkClass,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }\n    }, quoteText));\n  };\n\n  const refreshQuoteCTA = () => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"quote-refresh\",\n      onClick: () => fetchRandomQuote(setQuoteText),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }\n    }, \"Refresh\");\n  };\n\n  const getDarkModeCTA = () => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      onClick: () => setIsDarkMode(!isDarkMode),\n      className: \"quote-dark-mode\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 16\n      }\n    }, \"Glow\");\n  };\n\n  const getCTAs = () => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"quote-CTA-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 16\n      }\n    }, refreshQuoteCTA(), getDarkModeCTA());\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"quote-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, getDisplayQuote(), getCTAs());\n}\n\nexport default Quote; // import React, { useState, useEffect, useRef } from 'react';\n// import axios from \"axios\";\n// import { useQuoteContext } from \"./QuoteContext\";\n// function Quote() {\n//     const mounted = useRef();\n//     const {\n//         setLoaded,\n//         loaded,\n//         quote,\n//         setQuote\n//     } = useQuoteContext();\n//     useEffect(() => {\n//         if (!mounted.current) {\n//         axios.get('https://quotes.rest/qod')\n//             .then(response => {\n//                 console.log(response.data.contents);\n//                 setQuote(response.data.contents.quotes[0].quote);\n//             })\n//             .catch((error) => {\n//                 console.log(error);\n//             });\n//             mounted.current = true;\n//         }\n//         else {\n//             //componentDidUpdate logic\n//         }\n//     },[]);\n//     return (\n//         <div>\n//             {quote}\n//         </div>\n//     )\n// }\n// export default Quote;","map":{"version":3,"sources":["C:/Users/prakh/OneDrive/Desktop/New folder (2)/Portfolio-Website-Using-React/src/Components/quote/Quote.js"],"names":["React","useState","useEffect","useRef","fetchRandomQuote","Quote","quoteText","setQuoteText","isDarkMode","setIsDarkMode","getDisplayQuote","darkClass","refreshQuoteCTA","getDarkModeCTA","getCTAs"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,SAASC,gBAAT,QAAiC,eAAjC;AACA,OAAO,oBAAP;;AAEA,SAASC,KAAT,GAAiB;AACb,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACO,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,KAAD,CAA5C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZE,IAAAA,gBAAgB,CAACG,YAAD,CAAhB;AACH,GAFQ,EAEN,EAFM,CAAT;;AAKA,QAAMG,eAAe,GAAG,MAAM;AAC1B,QAAIC,SAAS,GAAGH,UAAU,GAAG,4BAAH,GAAkC,EAA5D;AACA,wBACI;AAAK,MAAA,SAAS,EAAE,2BAA2BG,SAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKL,SAAL,CADJ,CADJ;AAKH,GAPD;;AASA,QAAMM,eAAe,GAAG,MAAM;AAC1B,wBACI;AAAK,MAAA,SAAS,EAAC,eAAf;AAA+B,MAAA,OAAO,EAAE,MAAMR,gBAAgB,CAACG,YAAD,CAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ;AAKH,GAND;;AAQA,QAAMM,cAAc,GAAG,MAAM;AACzB,wBAAO;AAAK,MAAA,OAAO,EAAE,MAAIJ,aAAa,CAAC,CAACD,UAAF,CAA/B;AAA8C,MAAA,SAAS,EAAC,iBAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AAGH,GAJD;;AAMA,QAAMM,OAAO,GAAG,MAAK;AACjB,wBAAO;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACFF,eAAe,EADb,EAEFC,cAAc,EAFZ,CAAP;AAIH,GALD;;AAOA,sBACI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKH,eAAe,EADpB,EAEKI,OAAO,EAFZ,CADJ;AAMH;;AAED,eAAeT,KAAf,C,CAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { fetchRandomQuote } from \"./QuoteClient\";\r\nimport \"./styles/Quote.css\";\r\n\r\nfunction Quote() {\r\n    const [quoteText, setQuoteText] = useState(\"\");\r\n    const [isDarkMode, setIsDarkMode] = useState(false);\r\n\r\n    useEffect(() => {\r\n        fetchRandomQuote(setQuoteText);\r\n    }, []);\r\n\r\n\r\n    const getDisplayQuote = () => {\r\n        let darkClass = isDarkMode ? \"quote-display-wrapper-dark\" : \"\";\r\n        return (\r\n            <div className={\"quote-display-wrapper \" + darkClass}>\r\n                <h1>{quoteText}</h1>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const refreshQuoteCTA = () => {\r\n        return (\r\n            <div className=\"quote-refresh\" onClick={() => fetchRandomQuote(setQuoteText)}>\r\n                Refresh\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const getDarkModeCTA = () => {\r\n        return <div onClick={()=>setIsDarkMode(!isDarkMode)} className=\"quote-dark-mode\">\r\n            Glow\r\n        </div>\r\n    }\r\n\r\n    const getCTAs = () =>{\r\n        return <div className=\"quote-CTA-wrapper\">\r\n            {refreshQuoteCTA()}\r\n            {getDarkModeCTA()}\r\n        </div>\r\n    }\r\n\r\n    return (\r\n        <div className=\"quote-wrapper\">\r\n            {getDisplayQuote()}\r\n            {getCTAs()}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Quote;\r\n\r\n// import React, { useState, useEffect, useRef } from 'react';\r\n// import axios from \"axios\";\r\n// import { useQuoteContext } from \"./QuoteContext\";\r\n\r\n// function Quote() {\r\n//     const mounted = useRef();\r\n//     const {\r\n//         setLoaded,\r\n//         loaded,\r\n//         quote,\r\n//         setQuote\r\n//     } = useQuoteContext();\r\n\r\n//     useEffect(() => {\r\n//         if (!mounted.current) {\r\n//         axios.get('https://quotes.rest/qod')\r\n//             .then(response => {\r\n//                 console.log(response.data.contents);\r\n//                 setQuote(response.data.contents.quotes[0].quote);\r\n//             })\r\n//             .catch((error) => {\r\n//                 console.log(error);\r\n//             });\r\n//             mounted.current = true;\r\n//         }\r\n//         else {\r\n//             //componentDidUpdate logic\r\n//         }\r\n//     },[]);\r\n\r\n//     return (\r\n//         <div>\r\n//             {quote}\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n// export default Quote;\r\n"]},"metadata":{},"sourceType":"module"}